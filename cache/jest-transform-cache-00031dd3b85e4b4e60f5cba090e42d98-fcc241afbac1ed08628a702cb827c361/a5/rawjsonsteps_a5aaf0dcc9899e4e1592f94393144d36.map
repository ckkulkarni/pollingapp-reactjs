{"version":3,"names":["_getJestObj","mock","_react","_interopRequireDefault","require","_react2","_reactRouterDom","_jestCucumber","_RawJSON","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","jest","feature","loadFeature","MockIntersectionObserver","constructor","fn","takeRecords","Error","global","IntersectionObserver","defineFeature","test","post","url","title","created_at","author","objectID","location","pathname","state","hit","screen","render","createElement","MemoryRouter","initialEntries","given","when","then","expect","toBeDefined","rawJSON","getByTestId","rawJson","toHaveTextContent","JSON","stringify","backButton","getByText","toHaveAttribute"],"sources":["rawjson.steps.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { render, waitFor, fireEvent } from \"@testing-library/react\";\r\nimport { MemoryRouter } from \"react-router-dom\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport \"@testing-library/jest-dom/extend-expect\";\r\nimport { loadFeature, defineFeature } from \"jest-cucumber\";\r\nimport RawJSON from \"./../../RawJSON\";\r\nconst feature = loadFeature(\"src/components/features/rawjson.feature\");\r\njest.mock(\"axios\");\r\nclass MockIntersectionObserver implements IntersectionObserver {\r\n  root!: Element | Document | null;\r\n  rootMargin!: string;\r\n  thresholds!: readonly number[];\r\n  takeRecords(): IntersectionObserverEntry[] {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  observe = jest.fn();\r\n  unobserve = jest.fn();\r\n  disconnect = jest.fn();\r\n}\r\n\r\nglobal.IntersectionObserver = MockIntersectionObserver;\r\ndefineFeature(feature, (test) => {\r\n  const post = {\r\n    url: \"https://example.com\",\r\n    title: \"Title\",\r\n    created_at: \"2023-03-20T00:00:00.000Z\",\r\n    author: \"John Smith\",\r\n    objectID: \"001\",\r\n  };\r\n  const location = {\r\n    pathname: \"/rawjson\",\r\n    state: { hit: post },\r\n  };\r\n  const screen = render(\r\n    <MemoryRouter initialEntries={[location]}>\r\n      <RawJSON />\r\n    </MemoryRouter>\r\n  );\r\n  test(\"User can view raw JSON data for a story\", ({ given, when, then }) => {\r\n    given(\"a user is on the raw JSON data page\", () => {\r\n      expect(screen).toBeDefined();\r\n    });\r\n\r\n    when(\"the user views the raw JSON data\", () => {\r\n      const rawJSON = screen.getByTestId(\"raw-json-display\");\r\n      expect(rawJSON).toBeDefined();\r\n    });\r\n\r\n    then(\"the user should see the raw JSON data\", () => {\r\n      const rawJson = screen.getByTestId(\"raw-json\");\r\n      expect(rawJson).toHaveTextContent(JSON.stringify(post, null, 2));\r\n    });\r\n\r\n    then(\"the user should see a link to go back to the story list\", () => {\r\n      const backButton = screen.getByText(\"Back to List\");\r\n      expect(backButton).toHaveAttribute(\"href\", \"/\");\r\n    });\r\n  });\r\n});\r\n"],"mappings":";;AASAA,WAAA,GAAKC,IAAI,CAAC,OAAO,CAAC;AARlB,IAAAC,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,eAAA,GAAAF,OAAA;AAEAA,OAAA;AACA,IAAAG,aAAA,GAAAH,OAAA;AACA,IAAAI,QAAA,GAAAL,sBAAA,CAAAC,OAAA;AAAsC,SAAAD,uBAAAM,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAAA,SAAAG,gBAAAH,GAAA,EAAAI,GAAA,EAAAC,KAAA,IAAAD,GAAA,GAAAE,cAAA,CAAAF,GAAA,OAAAA,GAAA,IAAAJ,GAAA,IAAAO,MAAA,CAAAC,cAAA,CAAAR,GAAA,EAAAI,GAAA,IAAAC,KAAA,EAAAA,KAAA,EAAAI,UAAA,QAAAC,YAAA,QAAAC,QAAA,oBAAAX,GAAA,CAAAI,GAAA,IAAAC,KAAA,WAAAL,GAAA;AAAA,SAAAM,eAAAM,GAAA,QAAAR,GAAA,GAAAS,YAAA,CAAAD,GAAA,2BAAAR,GAAA,gBAAAA,GAAA,GAAAU,MAAA,CAAAV,GAAA;AAAA,SAAAS,aAAAE,KAAA,EAAAC,IAAA,eAAAD,KAAA,iBAAAA,KAAA,kBAAAA,KAAA,MAAAE,IAAA,GAAAF,KAAA,CAAAG,MAAA,CAAAC,WAAA,OAAAF,IAAA,KAAAG,SAAA,QAAAC,GAAA,GAAAJ,IAAA,CAAAK,IAAA,CAAAP,KAAA,EAAAC,IAAA,2BAAAK,GAAA,sBAAAA,GAAA,YAAAE,SAAA,4DAAAP,IAAA,gBAAAF,MAAA,GAAAU,MAAA,EAAAT,KAAA;AAAA,SAAAxB,YAAA;EAAA;IAAAkC;EAAA,IAAA9B,OAAA;EAAAJ,WAAA,GAAAA,CAAA,KAAAkC,IAAA;EAAA,OAAAA,IAAA;AAAA;AACtC,MAAMC,OAAO,GAAG,IAAAC,yBAAW,EAAC,yCAAyC,CAAC;AAEtE,MAAMC,wBAAwB,CAAiC;EAAAC,YAAA;IAAA1B,eAAA;IAAAA,eAAA;IAAAA,eAAA;IAAAA,eAAA,kBAOnDsB,IAAI,CAACK,EAAE,EAAE;IAAA3B,eAAA,oBACPsB,IAAI,CAACK,EAAE,EAAE;IAAA3B,eAAA,qBACRsB,IAAI,CAACK,EAAE,EAAE;EAAA;EALtBC,WAAWA,CAAA,EAAgC;IACzC,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;EAC5C;AAIF;AAEAC,MAAM,CAACC,oBAAoB,GAAGN,wBAAwB;AACtD,IAAAO,2BAAa,EAACT,OAAO,EAAGU,IAAI,IAAK;EAC/B,MAAMC,IAAI,GAAG;IACXC,GAAG,EAAE,qBAAqB;IAC1BC,KAAK,EAAE,OAAO;IACdC,UAAU,EAAE,0BAA0B;IACtCC,MAAM,EAAE,YAAY;IACpBC,QAAQ,EAAE;EACZ,CAAC;EACD,MAAMC,QAAQ,GAAG;IACfC,QAAQ,EAAE,UAAU;IACpBC,KAAK,EAAE;MAAEC,GAAG,EAAET;IAAK;EACrB,CAAC;EACD,MAAMU,MAAM,GAAG,IAAAC,cAAM,gBACnBvD,MAAA,CAAAS,OAAA,CAAA+C,aAAA,CAACpD,eAAA,CAAAqD,YAAY;IAACC,cAAc,EAAE,CAACR,QAAQ;EAAE,gBACvClD,MAAA,CAAAS,OAAA,CAAA+C,aAAA,CAAClD,QAAA,CAAAG,OAAO,OAAG,CACE,CAChB;EACDkC,IAAI,CAAC,yCAAyC,EAAE,CAAC;IAAEgB,KAAK;IAAEC,IAAI;IAAEC;EAAK,CAAC,KAAK;IACzEF,KAAK,CAAC,qCAAqC,EAAE,MAAM;MACjDG,MAAM,CAACR,MAAM,CAAC,CAACS,WAAW,EAAE;IAC9B,CAAC,CAAC;IAEFH,IAAI,CAAC,kCAAkC,EAAE,MAAM;MAC7C,MAAMI,OAAO,GAAGV,MAAM,CAACW,WAAW,CAAC,kBAAkB,CAAC;MACtDH,MAAM,CAACE,OAAO,CAAC,CAACD,WAAW,EAAE;IAC/B,CAAC,CAAC;IAEFF,IAAI,CAAC,uCAAuC,EAAE,MAAM;MAClD,MAAMK,OAAO,GAAGZ,MAAM,CAACW,WAAW,CAAC,UAAU,CAAC;MAC9CH,MAAM,CAACI,OAAO,CAAC,CAACC,iBAAiB,CAACC,IAAI,CAACC,SAAS,CAACzB,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;IAClE,CAAC,CAAC;IAEFiB,IAAI,CAAC,yDAAyD,EAAE,MAAM;MACpE,MAAMS,UAAU,GAAGhB,MAAM,CAACiB,SAAS,CAAC,cAAc,CAAC;MACnDT,MAAM,CAACQ,UAAU,CAAC,CAACE,eAAe,CAAC,MAAM,EAAE,GAAG,CAAC;IACjD,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC"}