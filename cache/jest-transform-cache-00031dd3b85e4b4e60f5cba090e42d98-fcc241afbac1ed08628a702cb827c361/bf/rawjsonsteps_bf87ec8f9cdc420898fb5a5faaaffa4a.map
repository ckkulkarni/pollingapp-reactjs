{"version":3,"names":["_getJestObj","mock","_react","_interopRequireDefault","require","_react2","_reactRouterDom","_jestCucumber","_RawJSON","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","jest","feature","loadFeature","MockIntersectionObserver","constructor","fn","takeRecords","Error","global","IntersectionObserver","defineFeature","test","post1","url","title","created_at","author","objectID","post2","post3","details","hit","screen","render","createElement","MemoryRouter","initialEntries","state","pathname","given","and","then","expect","toBeDefined","rawJson","getByTestId","expectedObject","JSON","parse","innerHTML","console","log","toEqual"],"sources":["rawjson.steps.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { render, waitFor, fireEvent } from \"@testing-library/react\";\r\nimport { MemoryRouter } from \"react-router-dom\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport \"@testing-library/jest-dom/extend-expect\";\r\nimport { loadFeature, defineFeature } from \"jest-cucumber\";\r\nimport RawJSON from \"./../../RawJSON\";\r\nconst feature = loadFeature(\"src/components/features/rawjson.feature\");\r\njest.mock(\"axios\");\r\nclass MockIntersectionObserver implements IntersectionObserver {\r\n  root!: Element | Document | null;\r\n  rootMargin!: string;\r\n  thresholds!: readonly number[];\r\n  takeRecords(): IntersectionObserverEntry[] {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  observe = jest.fn();\r\n  unobserve = jest.fn();\r\n  disconnect = jest.fn();\r\n}\r\n\r\nglobal.IntersectionObserver = MockIntersectionObserver;\r\ndefineFeature(feature, (test) => {\r\n  const post1 = {\r\n    url: \"https://example1.com\",\r\n    title: \"Title 1\",\r\n    created_at: \"19-03-2023\",\r\n    author: \"John Marston\",\r\n    objectID: \"001\",\r\n  };\r\n  const post2 = {\r\n    url: \"https://example2.com\",\r\n    title: \"Title 2\",\r\n    created_at: \"20-03-2023\",\r\n    author: \"Jane Marston\",\r\n    objectID: \"002\",\r\n  };\r\n  const post3 = {\r\n    url: \"https://example3.com\",\r\n    title: \"Title 3\",\r\n    created_at: \"20-03-2023\",\r\n    author: \"Jack Marston\",\r\n    objectID: \"003\",\r\n  };\r\n\r\n  const details = { hit: post1, post2, post3 };\r\n  const screen = render(\r\n    <MemoryRouter initialEntries={[{ state: details, pathname: \"/details\" }]}>\r\n      <RawJSON />\r\n    </MemoryRouter>\r\n  );\r\n  test(\"User can view the raw JSON data for a story\", ({\r\n    given,\r\n    and,\r\n    then,\r\n  }) => {\r\n    given(\"a user is on the Raw JSON page for a story\", () => {\r\n      expect(screen).toBeDefined();\r\n    });\r\n\r\n    then(\"the user should see the raw JSON data for the story\", () => {\r\n      const rawJson = screen.getByTestId(\"raw-json\");\r\n      const expectedObject = JSON.parse(rawJson.innerHTML);\r\n      console.log(expectedObject.url);\r\n      expect(expectedObject.url).toEqual(details.hit.url);\r\n    });\r\n    // and(\"the user should see a button to go back to the Story List\", () => {\r\n    //   const backButton = screen.getByTestId(\"backButton\");\r\n    //   fireEvent.click(backButton);\r\n    // });\r\n  });\r\n});\r\n"],"mappings":"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"}