{"version":3,"names":["_getJestObj","mock","_react","_interopRequireDefault","require","_react2","_reactRouterDom","_jestCucumber","_RawJSON","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","jest","feature","loadFeature","MockIntersectionObserver","constructor","fn","takeRecords","Error","global","IntersectionObserver","defineFeature","test","given","and","then","location","state","hit","url","title","created_at","author","objectID","pathname","screen","render","createElement","MemoryRouter","initialEntries","expect","toBeDefined","rawJson","getByTestId","expectedObject","JSON","parse","innerHTML","toEqual","backButton","getAllByTestId","fireEvent","click"],"sources":["rawjson.steps.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { render, waitFor, fireEvent } from \"@testing-library/react\";\r\nimport { MemoryRouter } from \"react-router-dom\";\r\nimport { act } from \"react-dom/test-utils\";\r\nimport \"@testing-library/jest-dom/extend-expect\";\r\nimport { loadFeature, defineFeature } from \"jest-cucumber\";\r\nimport RawJSON from \"./../../RawJSON\";\r\nconst feature = loadFeature(\"src/components/features/rawjson.feature\");\r\njest.mock(\"axios\");\r\nclass MockIntersectionObserver implements IntersectionObserver {\r\n  root!: Element | Document | null;\r\n  rootMargin!: string;\r\n  thresholds!: readonly number[];\r\n  takeRecords(): IntersectionObserverEntry[] {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  observe = jest.fn();\r\n  unobserve = jest.fn();\r\n  disconnect = jest.fn();\r\n}\r\n\r\nglobal.IntersectionObserver = MockIntersectionObserver;\r\ndefineFeature(feature, (test) => {\r\n  test(\"User can view the raw JSON data for a story\", ({\r\n    given,\r\n    and,\r\n    then,\r\n  }) => {\r\n    const location = {\r\n      state: {\r\n        hit: {\r\n          url: \"https://example1.com\",\r\n          title: \"Title 1\",\r\n          created_at: \"19-03-2023\",\r\n          author: \"John Marston\",\r\n          objectID: \"001\",\r\n        },\r\n      },\r\n      pathname: \"/details\",\r\n    };\r\n    const screen = render(\r\n      <MemoryRouter initialEntries={[location]}>\r\n        <RawJSON />\r\n      </MemoryRouter>\r\n    );\r\n\r\n    given(\"a user is on the Raw JSON page for a story\", () => {\r\n      expect(screen).toBeDefined();\r\n    });\r\n\r\n    then(\"the user should see the raw JSON data for the story\", () => {\r\n      const rawJson = screen.getByTestId(\"raw-json\");\r\n      const expectedObject = JSON.parse(rawJson.innerHTML);\r\n      expect(expectedObject.url).toEqual(location.state.hit.url);\r\n      expect(expectedObject.created_at).toEqual(location.state.hit.created_at);\r\n      expect(expectedObject.objectID).toEqual(location.state.hit.objectID);\r\n      expect(expectedObject.author).toEqual(location.state.hit.author);\r\n      expect(expectedObject.title).toEqual(location.state.hit.title);\r\n    });\r\n    and(\"the user should see a button to go back to the Story List\", () => {\r\n      const location = {\r\n        hit: {\r\n          url: \"https://example1.com\",\r\n          title: \"Title 1\",\r\n          created_at: \"19-03-2023\",\r\n          author: \"John Marston\",\r\n          objectID: \"001\",\r\n        },\r\n\r\n        pathname: \"/story\",\r\n      };\r\n      const screen = render(\r\n        <MemoryRouter initialEntries={[location]}>\r\n          <RawJSON />\r\n        </MemoryRouter>\r\n      );\r\n      const backButton = screen.getAllByTestId(\"backButton\");\r\n      fireEvent.click(backButton[1]);\r\n    });\r\n  });\r\n});\r\n"],"mappings":"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"}