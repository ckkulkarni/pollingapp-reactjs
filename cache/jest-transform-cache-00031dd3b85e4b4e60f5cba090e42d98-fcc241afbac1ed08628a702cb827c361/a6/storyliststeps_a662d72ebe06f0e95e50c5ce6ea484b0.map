{"version":3,"names":["_getJestObj","mock","_react","_interopRequireDefault","require","_react2","_reactRouterDom","_StoryList","_enzyme","_enzymeAdapterReact","_jestCucumber","obj","__esModule","default","_defineProperty","key","value","_toPropertyKey","Object","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","call","TypeError","Number","jest","feature","loadFeature","configure","adapter","Adapter","MockIntersectionObserver","constructor","fn","takeRecords","Error","global","IntersectionObserver","defineFeature","test","screen","given","when","then","and","render","createElement","MemoryRouter","expect","toBeDefined","tableHeaders","getAllByTestId","toHaveTextContent"],"sources":["storylist.steps.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { render, waitFor } from \"@testing-library/react\";\r\nimport { MemoryRouter } from \"react-router-dom\";\r\nimport StoryList from \"../../StoryList\";\r\nimport { shallow, mount, configure } from \"enzyme\";\r\nimport Adapter from \"enzyme-adapter-react-16\";\r\nimport { loadFeature, defineFeature } from \"jest-cucumber\";\r\nconst feature = loadFeature(\"src/components/features/storylist.feature\");\r\nconfigure({ adapter: new Adapter() });\r\njest.mock(\"axios\");\r\nclass MockIntersectionObserver implements IntersectionObserver {\r\n  root!: Element | Document | null;\r\n  rootMargin!: string;\r\n  thresholds!: readonly number[];\r\n  takeRecords(): IntersectionObserverEntry[] {\r\n    throw new Error(\"Method not implemented.\");\r\n  }\r\n  observe = jest.fn();\r\n  unobserve = jest.fn();\r\n  disconnect = jest.fn();\r\n}\r\n\r\nglobal.IntersectionObserver = MockIntersectionObserver;\r\n\r\ndefineFeature(feature, (test) => {\r\n  let screen: any;\r\n  test(\"User can view a list of stories\", ({ given, when, then, and }) => {\r\n    given(\"a user is on the home page\", () => {\r\n      // no code needed here, just setting up the context\r\n      screen = render(\r\n        <MemoryRouter>\r\n          <StoryList />\r\n        </MemoryRouter>\r\n      );\r\n      expect(screen).toBeDefined();\r\n    });\r\n\r\n    when(\"the user visits the Story List component\", () => {});\r\n\r\n    then(\r\n      'the user should see a table with columns \"Title\", \"URL\", \"Author\", and \"Created At\"',\r\n      () => {\r\n        screen = render(\r\n          <MemoryRouter>\r\n            <StoryList />\r\n          </MemoryRouter>\r\n        );\r\n        const tableHeaders = screen.getAllByTestId(\"tableHeader\");\r\n        expect(tableHeaders).toHaveTextContent(\"Title\");\r\n        expect(tableHeaders).toHaveTextContent(\"URL\");\r\n        expect(tableHeaders).toHaveTextContent(\"Author\");\r\n        expect(tableHeaders).toHaveTextContent(\"Created At\");\r\n      }\r\n    );\r\n\r\n    // and(\"the table should have multiple rows of stories\", async () => {\r\n    //   // wait for table to load\r\n    //   await waitFor(() => {\r\n    //     const tableRows = screen.find(\"tbody tr\");\r\n    //     expect(tableRows).toHaveLength(2); // assuming there are two rows\r\n    //   });\r\n  });\r\n});\r\n"],"mappings":"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"}