{"version":3,"names":["_axios","_interopRequireDefault","require","_react","_interopRequireWildcard","_reactRouter","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","obj","__esModule","default","cache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","StoryList","navigation","useNavigate","hits","setHits","useState","page","setPage","containerRef","useRef","observerRef","getData","pageNumber","resultSet","axios","newHits","data","filter","hit","map","h","objectID","includes","error","console","useEffect","interval","setInterval","prevPage","clearInterval","current","options","root","rootMargin","threshold","IntersectionObserver","entries","entry","isIntersecting","observe","disconnect","handleNavigation","state","createElement","className","border","id","onClick","title","url","author","created_at","ref","_default","exports"],"sources":["StoryList.tsx"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\n\r\ninterface Story {\r\n  title: string;\r\n  url: string;\r\n  author: string;\r\n  created_at: string;\r\n  objectID: string;\r\n}\r\n\r\nconst StoryList = () => {\r\n  const navigation = useNavigate();\r\n  const [hits, setHits] = useState<Story[]>([]);\r\n  const [page, setPage] = useState(0);\r\n  const containerRef = useRef<HTMLDivElement>(null);\r\n  const observerRef = useRef<IntersectionObserver | null>(null);\r\n\r\n  const getData = async (pageNumber: number) => {\r\n    try {\r\n      const resultSet = await axios.get(\r\n        `https://hn.algolia.com/api/v1/search_by_date?tags=story&page=${pageNumber}&hitsPerPage=18`\r\n      );\r\n      const newHits = resultSet.data.hits.filter(\r\n        (hit: Story) => !hits.map((h) => h.objectID).includes(hit.objectID)\r\n      );\r\n      setHits([...hits, ...newHits]);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setPage((prevPage) => prevPage + 1);\r\n    }, 10000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getData(page);\r\n  }, [page]);\r\n\r\n  useEffect(() => {\r\n    if (!containerRef.current) {\r\n      return;\r\n    }\r\n    const options = {\r\n      root: null,\r\n      rootMargin: \"20px\",\r\n      threshold: 1.0,\r\n    };\r\n    observerRef.current = new IntersectionObserver((entries) => {\r\n      const [entry] = entries;\r\n      if (entry.isIntersecting) {\r\n        setPage((prevPage) => prevPage + 1);\r\n      }\r\n    }, options);\r\n    observerRef.current.observe(containerRef.current);\r\n    return () => observerRef.current?.disconnect();\r\n  }, [containerRef]);\r\n\r\n  const handleNavigation = (hit: any) => {\r\n    navigation(\"/stories/id\", { state: { hit } });\r\n  };\r\n\r\n  return (\r\n    <div className=\"storyContainer\">\r\n      <table border={1} className=\"table\" id=\"tableContainer\">\r\n        <thead\r\n          className=\"thead-dark\"\r\n          id=\"tableHeader\"\r\n          data-testid=\"tableHeader\"\r\n        >\r\n          <tr>\r\n            <th>Title</th>\r\n            <th>URL</th>\r\n            <th>Author</th>\r\n            <th>Created At</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody className=\"tableBody\">\r\n          {hits.map((hit) => (\r\n            <tr key={hit.objectID} onClick={() => handleNavigation(hit)}>\r\n              <td>{hit.title}</td>\r\n              <td>{hit.url}</td>\r\n              <td>{hit.author}</td>\r\n              <td>{hit.created_at}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      <div ref={containerRef}></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoryList;\r\n"],"mappings":"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"}